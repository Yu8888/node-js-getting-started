<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body>
<div class="box">
    <h4>Software Engineering Evidence Repository</h4> &nbsp;&nbsp;&nbsp;<a href="Register.html" target="_blank">Register</a>
    &nbsp;&nbsp;&nbsp;<a href="Login.html" target="_blank">Sign In</a>
    &nbsp;&nbsp;&nbsp;<a href="Login.html" target="_blank">Moderator Login</a>
</div>
<div>
    <input type="text" id="txt">
    <button type="button" id="btn">Search</button>
    <ul id="list">
 
    </ul>
</div>
<script>
    /**
     * Created by Steven on 2016-10-25.
     */
    var oTxt = document.getElementById('txt');
    var oBtn = document.getElementById('btn');
    var oList = document.getElementById('list');
 
    var fruits = ["article{Janzen:2008fx, "+
                "author = {{Janzen, D S} and {Saiedian, H}}, "+
                "title = {{Does Test-Driven Development Really Improve Software Design Quality?}}"+
                "journal = {Software, IEEE}, "+
                "year = {2008}, "+
                "volume = {25}, "+
                "number = {2}, "+
                "pages = {77--84}}","article{Aniche:er, "+
                "author = {Aniche, M F and Testing, MA Gerosa Software, year = {2010}, "+
                "title = {{Most common mistakes in test-driven development practice: Results from an online survey with developers}}, "+
                "journal = {ieeexplore.ieee.org}","article{2019arXiv190712290R, "+
                "author = {Romano, Simone and Fucci, Davide and Baldassarre, Maria Teresa and Caivano, Danilo and Scanniello, Giuseppe}, "+
                "title = {{An Empirical Assessment on Affective Reactions of Novice Developers when Applying Test-Driven Development}}, "+
                "journal = {arXiv.org}, "+
                "year = {2019}, "+
                "eprint = {1907.12290}, "+
                "eprinttype = {arxiv}, "+
                "eprintclass = {cs.SE}, "+
                "pages = {arXiv:1907.12290}, "+
                "month = jul, "+
                "annote = {Accepted for publication at the 20th International Conference on Product-Focused Software Process Improvement (PROFES19)}}"];
    //点击事件
    oBtn.addEventListener('click', function(){
        var keyWord = oTxt.value;
        // var fruitList = searchByIndexOf(keyWord,fruits);
        console.log(fruitList);
        var fruitList = searchByRegExp(keyWord, fruits);
        renderFruits(fruitList);
    }, false);
    //回车查询
    oTxt.addEventListener('keydown', function(e){
        if(e.keyCode == 13){
            var keyWord = oTxt.value;
            // var fruitList = searchByIndexOf(keyWord,fruits);
            var fruitList = searchByRegExp(keyWord, fruits);
            renderFruits(fruitList);
        }
    }, false);
    var cpLock = false;
    $('#txt').on('compositionstart', function () {
        cpLock = true;
        console.log("不搜索")
    });
    $('#txt').on('compositionend', function () {
        cpLock = false;
        console.log("汉字搜索");
        var keyWord = oTxt.value;
        // var fruitList = searchByIndexOf(keyWord,fruits);
        var fruitList = searchByRegExp(keyWord, fruits);
        renderFruits(fruitList);
    });
    $('#txt').on('input', function () {
        if (!cpLock) {
            console.log("字母搜索")
            var keyWord = oTxt.value;
            // var fruitList = searchByIndexOf(keyWord,fruits);
            var fruitList = searchByRegExp(keyWord, fruits);
            renderFruits(fruitList);
        }
    });
    function renderFruits(list){
        if(!(list instanceof Array)){
            return ;
        }
        oList.innerHTML = '';
        var len = list.length;
        var item = null;
        for(var i=0;i<len;i++){
            item = document.createElement('li');
            item.innerHTML = list[i];
            oList.appendChild(item);
        }
    }
    //模糊匹配的时候如果不区分大小写，可以使用toLowerCase()或者toUpperCase()转换之后去匹配。
 
    //模糊查询1:利用字符串的indexOf方法
    function searchByIndexOf(keyWord, list){
        if(!(list instanceof Array)){
            return ;
        }
        var len = list.length;
        var arr = [];
        for(var i=0;i<len;i++){
            //如果字符串中不包含目标字符会返回-1
            if(list[i].indexOf(keyWord)>=0){
                arr.push(list[i]);
            }
        }
        return arr;
    }
    //正则匹配
    function searchByRegExp(keyWord, list){
        if(!(list instanceof Array)){
            return ;
        }
        var len = list.length;
        var arr = [];
        var reg = new RegExp(keyWord);
        for(var i=0;i<len;i++){
            //如果字符串中不包含目标字符会返回-1
            if(list[i].match(reg)){
                arr.push(list[i]);
            }
        }
        return arr;
    }
    renderFruits(fruits);
</script>
</body>
</html>
